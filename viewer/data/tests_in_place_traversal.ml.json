{"syntax":"<div class=\"highlight\"><pre><span class=\"c\">(* In-place traversal of a tree, after Sobel and Friedman (1998). *)</span>\n\n<span class=\"c\">(* If we wish to publish this example, we must cite Walker and Morrisett,</span>\n<span class=\"c\">   ``Alias Types for Recursive Data Structures&#39;&#39;, who do this already. *)</span>\n\n<span class=\"c\">(* We declare the type of trees as [exclusive] because we need trees</span>\n<span class=\"c\">   to be affine (that is, there must be no sharing) and we will</span>\n<span class=\"c\">   temporarily mutate them while we traverse them. *)</span>\n\n<span class=\"c\">(* We do not include any data in the tree, because this is an</span>\n<span class=\"c\">   orthogonal concern. *)</span>\n\n<span class=\"n\">exclusive</span> <span class=\"n\">data</span> <span class=\"n\">tree</span> <span class=\"o\">=</span>\n  <span class=\"o\">|</span> <span class=\"nc\">TEmpty</span>\n  <span class=\"o\">|</span> <span class=\"nc\">TNode</span> <span class=\"o\">{</span> <span class=\"n\">left</span><span class=\"o\">:</span> <span class=\"n\">tree</span><span class=\"o\">;</span> <span class=\"n\">right</span><span class=\"o\">:</span> <span class=\"n\">tree</span> <span class=\"o\">}</span>\n\n<span class=\"c\">(* The continuations used by the tree traversal procedure below.</span>\n<span class=\"c\">   These continuations can be thought of as contexts or zippers. *)</span>\n\n<span class=\"n\">exclusive</span> <span class=\"n\">data</span> <span class=\"n\">continuation</span> <span class=\"o\">=</span>\n  <span class=\"o\">|</span> <span class=\"nc\">KInitial</span>\n  <span class=\"o\">|</span> <span class=\"nc\">KLeft</span> <span class=\"o\">{</span> <span class=\"n\">father</span><span class=\"o\">:</span> <span class=\"n\">continuation</span><span class=\"o\">;</span> <span class=\"n\">right</span><span class=\"o\">:</span> <span class=\"n\">tree</span> <span class=\"o\">}</span>\n  <span class=\"o\">|</span> <span class=\"nc\">KRight</span> <span class=\"o\">{</span> <span class=\"n\">left</span><span class=\"o\">:</span> <span class=\"n\">tree</span><span class=\"o\">;</span> <span class=\"n\">father</span><span class=\"o\">:</span> <span class=\"n\">continuation</span> <span class=\"o\">}</span>\n\n<span class=\"c\">(* Tree traversal. *)</span>\n\n<span class=\"c\">(* This procedure does nothing, but traverses the tree. One could adapt</span>\n<span class=\"c\">   it to actually do something at every node. *)</span>\n\n<span class=\"c\">(* Even though this procedure traverses a tree, it is tail-recursive.</span>\n<span class=\"c\">   The stack is encoded in the tree via link inversion. No memory</span>\n<span class=\"c\">   allocation is performed. *)</span>\n\n<span class=\"k\">val</span> <span class=\"k\">rec</span> <span class=\"n\">traverse</span> <span class=\"o\">(</span><span class=\"n\">consumes</span> <span class=\"n\">t</span><span class=\"o\">:</span> <span class=\"n\">tree</span><span class=\"o\">,</span> <span class=\"n\">consumes</span> <span class=\"n\">k</span><span class=\"o\">:</span> <span class=\"n\">continuation</span><span class=\"o\">):</span> <span class=\"n\">tree</span> <span class=\"o\">=</span>\n  <span class=\"c\">(* t: tree, k: continuation *)</span>\n  <span class=\"k\">match</span> <span class=\"n\">t</span> <span class=\"k\">with</span>\n  <span class=\"o\">|</span> <span class=\"nc\">TEmpty</span> <span class=\"o\">-&gt;</span>\n      <span class=\"n\">continue</span> <span class=\"o\">(</span><span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"n\">t</span><span class=\"o\">)</span>\n  <span class=\"o\">|</span> <span class=\"nc\">TNode</span> <span class=\"o\">{</span> <span class=\"n\">left</span><span class=\"o\">;</span> <span class=\"n\">right</span> <span class=\"o\">}</span> <span class=\"o\">-&gt;</span>\n      <span class=\"c\">(* t: TNode { left = left, right = right }, left, right: tree, k: continuation *)</span>\n      <span class=\"c\">(* New syntax for mutating the tag and the fields at once: conflict in the</span>\n<span class=\"c\">       * grammar. *)</span>\n      <span class=\"c\">(* t &lt;- KLeft { father = k; right = right }; *)</span>\n      <span class=\"n\">t</span> <span class=\"o\">&lt;=</span> <span class=\"nc\">KLeft</span><span class=\"o\">;</span>\n      <span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">father</span> <span class=\"o\">&lt;-</span> <span class=\"n\">k</span><span class=\"o\">;</span>\n      <span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">right</span> <span class=\"o\">&lt;-</span> <span class=\"n\">right</span><span class=\"o\">;</span>\n      <span class=\"c\">(* t: KLeft { father = k, right = right }, left, right: tree, k: continuation *)</span>\n      <span class=\"c\">(* t: continuation, left: tree *)</span>\n      <span class=\"n\">traverse</span> <span class=\"o\">((</span><span class=\"n\">left</span><span class=\"o\">,</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"n\">explain</span><span class=\"o\">)</span>\n  <span class=\"k\">end</span>\n\n<span class=\"ow\">and</span> <span class=\"n\">continue</span> <span class=\"o\">(</span><span class=\"n\">consumes</span> <span class=\"n\">k</span><span class=\"o\">:</span> <span class=\"n\">continuation</span><span class=\"o\">,</span> <span class=\"n\">consumes</span> <span class=\"n\">t</span><span class=\"o\">:</span> <span class=\"n\">tree</span><span class=\"o\">):</span> <span class=\"n\">tree</span> <span class=\"o\">=</span>\n  <span class=\"c\">(* k: continuation, t: tree *)</span>\n  <span class=\"k\">match</span> <span class=\"n\">k</span> <span class=\"k\">with</span>\n  <span class=\"o\">|</span> <span class=\"nc\">KInitial</span> <span class=\"o\">-&gt;</span>\n      <span class=\"c\">(* t: tree *)</span>\n      <span class=\"n\">t</span>\n  <span class=\"o\">|</span> <span class=\"nc\">KLeft</span> <span class=\"o\">{</span> <span class=\"n\">father</span><span class=\"o\">;</span> <span class=\"n\">right</span> <span class=\"o\">}</span> <span class=\"o\">-&gt;</span>\n      <span class=\"c\">(* k: KLeft { father = father; right = right }, father: continuation, right: tree, t: tree *)</span>\n      <span class=\"c\">(* k &lt;- KRight { left = t; father = father }; *)</span>\n      <span class=\"n\">k</span> <span class=\"o\">&lt;=</span> <span class=\"nc\">KRight</span><span class=\"o\">;</span>\n      <span class=\"n\">k</span><span class=\"o\">.</span><span class=\"n\">left</span> <span class=\"o\">&lt;-</span> <span class=\"n\">t</span><span class=\"o\">;</span>\n      <span class=\"n\">k</span><span class=\"o\">.</span><span class=\"n\">father</span> <span class=\"o\">&lt;-</span> <span class=\"n\">father</span><span class=\"o\">;</span>\n      <span class=\"c\">(* k: KRight { left = t; father = father }, father: continuation, right: tree, t: tree *)</span>\n      <span class=\"c\">(* k: continuation, right: tree *)</span>\n      <span class=\"n\">traverse</span> <span class=\"o\">(</span><span class=\"n\">right</span><span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"o\">)</span>\n  <span class=\"o\">|</span> <span class=\"nc\">KRight</span> <span class=\"o\">{</span> <span class=\"n\">left</span><span class=\"o\">;</span> <span class=\"n\">father</span> <span class=\"o\">}</span> <span class=\"o\">-&gt;</span>\n      <span class=\"c\">(* k: KRight { left = left; father = father }, left: tree, father: continuation, t: tree *)</span>\n      <span class=\"c\">(* k &lt;- TNode { left = left; right = t }; *)</span>\n      <span class=\"n\">k</span> <span class=\"o\">&lt;=</span> <span class=\"nc\">TNode</span><span class=\"o\">;</span>\n      <span class=\"n\">k</span><span class=\"o\">.</span><span class=\"n\">left</span> <span class=\"o\">&lt;-</span> <span class=\"n\">left</span><span class=\"o\">;</span>\n      <span class=\"n\">k</span><span class=\"o\">.</span><span class=\"n\">right</span> <span class=\"o\">&lt;-</span> <span class=\"n\">t</span><span class=\"o\">;</span>\n      <span class=\"c\">(* k: TNode { left = left; right = t }, left: tree, father: continuation, t: tree *)</span>\n      <span class=\"c\">(* k: tree, father: continuation *)</span>\n      <span class=\"n\">continue</span> <span class=\"o\">(</span><span class=\"n\">father</span><span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"o\">)</span>\n  <span class=\"k\">end</span>\n\n<span class=\"c\">(* The procedure [traverse] above is pretty simple and elegant, but has the</span>\n<span class=\"c\">   drawback that the call [traverse (t, new KInitial {})] returns a new tree,</span>\n<span class=\"c\">   instead of the original tree. The quick-and-dirty way of fixing this problem</span>\n<span class=\"c\">   is to add one dynamic check at the end, as follows. *)</span>\n\n<span class=\"k\">val</span> <span class=\"n\">traverse</span> <span class=\"o\">(</span><span class=\"n\">t</span><span class=\"o\">:</span> <span class=\"n\">tree</span><span class=\"o\">):</span> <span class=\"bp\">()</span> <span class=\"o\">=</span>\n  <span class=\"c\">(* t: tree *)</span>\n  <span class=\"c\">(* Call the above version of [traverse] with an initial continuation. *)</span>\n  <span class=\"k\">let</span> <span class=\"n\">u</span> <span class=\"o\">=</span> <span class=\"n\">traverse</span> <span class=\"o\">(</span><span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"nc\">KInitial</span><span class=\"o\">)</span> <span class=\"k\">in</span>\n  <span class=\"c\">(* u: tree *)</span>\n  <span class=\"c\">(* We now have a permission for [u], and have lost the permission for</span>\n<span class=\"c\">     [t]. Fortunately, the two trees should be equal: the link inversion</span>\n<span class=\"c\">     process, in the end, reconstructs the original tree. *)</span>\n  <span class=\"k\">if</span> <span class=\"n\">explain</span> <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"o\">==</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"k\">then</span>\n    <span class=\"c\">(* We are done. *)</span>\n    <span class=\"c\">(* t: tree *)</span>\n    <span class=\"bp\">()</span>\n  <span class=\"k\">else</span>\n    <span class=\"c\">(* Oops! *)</span>\n    <span class=\"n\">fail</span>\n</pre></div>\n","current_location":{"start":{"line":49,"col":16},"end":{"line":49,"col":33}},"file_name":"tests/in_place_traversal.ml","type":"single","svg":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.26.3 (20100126.1600)\n -->\n<!-- Title: g Pages: 1 -->\n<svg width=\"816pt\" height=\"236pt\"\n viewBox=\"0.00 0.00 816.00 236.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph1\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 232)\">\n<title>g</title>\n<polygon fill=\"white\" stroke=\"white\" points=\"-4,5 -4,-232 813,-232 813,5 -4,5\"/>\n<!-- node8 -->\n<g id=\"node8\" class=\"node\"><title>node8</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"156,-177 156,-227 210,-227 210,-177 156,-177\"/>\n<text text-anchor=\"middle\" x=\"183\" y=\"-210.4\" font-family=\"Times Roman,serif\" font-size=\"14.00\">tree</text>\n<polyline fill=\"none\" stroke=\"black\" points=\"156,-202 210,-202 \"/>\n<text text-anchor=\"middle\" x=\"183\" y=\"-185.4\" font-family=\"Times Roman,serif\" font-size=\"14.00\">right</text>\n</g>\n<!-- node4 -->\n<g id=\"node4\" class=\"node\"><title>node4</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"46,-89 46,-139 208,-139 208,-89 46,-89\"/>\n<text text-anchor=\"middle\" x=\"72.5\" y=\"-122.4\" font-family=\"Times Roman,serif\" font-size=\"14.00\">KLeft</text>\n<polyline fill=\"none\" stroke=\"black\" points=\"99,-114 99,-139 \"/>\n<text text-anchor=\"middle\" x=\"128.5\" y=\"-122.4\" font-family=\"Times Roman,serif\" font-size=\"14.00\">father</text>\n<polyline fill=\"none\" stroke=\"black\" points=\"158,-114 158,-139 \"/>\n<text text-anchor=\"middle\" x=\"183\" y=\"-122.4\" font-family=\"Times Roman,serif\" font-size=\"14.00\">right</text>\n<polyline fill=\"none\" stroke=\"black\" points=\"46,-114 208,-114 \"/>\n<text text-anchor=\"middle\" x=\"127\" y=\"-97.4\" font-family=\"Times Roman,serif\" font-size=\"14.00\">t</text>\n</g>\n<!-- node4&#45;&gt;node8 -->\n<g id=\"edge4\" class=\"edge\"><title>node4:right&#45;&gt;node8</title>\n<path fill=\"none\" stroke=\"black\" d=\"M183,-139C183,-147.962 183,-157.641 183,-166.66\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"179.5,-166.862 183,-176.862 186.5,-166.862 179.5,-166.862\"/>\n</g>\n<!-- node5 -->\n<g id=\"node5\" class=\"node\"><title>node5</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"0,-177 0,-227 104,-227 104,-177 0,-177\"/>\n<text text-anchor=\"middle\" x=\"52\" y=\"-210.4\" font-family=\"Times Roman,serif\" font-size=\"14.00\">continuation</text>\n<polyline fill=\"none\" stroke=\"black\" points=\"0,-202 104,-202 \"/>\n<text text-anchor=\"middle\" x=\"52\" y=\"-185.4\" font-family=\"Times Roman,serif\" font-size=\"14.00\">k</text>\n</g>\n<!-- node4&#45;&gt;node5 -->\n<g id=\"edge2\" class=\"edge\"><title>node4:father&#45;&gt;node5</title>\n<path fill=\"none\" stroke=\"black\" d=\"M129,-139C129,-152.351 121.98,-163.383 112.179,-172.28\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"109.824,-169.682 104.213,-178.67 114.204,-175.143 109.824,-169.682\"/>\n</g>\n<!-- node12 -->\n<g id=\"node12\" class=\"node\"><title>node12</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"226,-8 226,-44 280,-44 280,-8 226,-8\"/>\n<text text-anchor=\"middle\" x=\"253\" y=\"-21.9\" font-family=\"Times Roman,serif\" font-size=\"14.00\">()</text>\n</g>\n<!-- node2 -->\n<g id=\"node2\" class=\"node\"><title>node2</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"297.5,-1 297.5,-51 472.5,-51 472.5,-1 297.5,-1\"/>\n<text text-anchor=\"middle\" x=\"385\" y=\"-34.4\" font-family=\"Times Roman,serif\" font-size=\"14.00\">[t :: term, k :: term, /…</text>\n<polyline fill=\"none\" stroke=\"black\" points=\"297.5,-26 472.5,-26 \"/>\n<text text-anchor=\"middle\" x=\"385\" y=\"-9.4\" font-family=\"Times Roman,serif\" font-size=\"14.00\">traverse</text>\n</g>\n<!-- node6 -->\n<g id=\"node6\" class=\"node\"><title>node6</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"46,-8 46,-44 112,-44 112,-8 46,-8\"/>\n<text text-anchor=\"middle\" x=\"62.5\" y=\"-21.9\" font-family=\"Times Roman,serif\" font-size=\"14.00\">_0</text>\n<polyline fill=\"none\" stroke=\"black\" points=\"79,-8 79,-44 \"/>\n<text text-anchor=\"middle\" x=\"95.5\" y=\"-21.9\" font-family=\"Times Roman,serif\" font-size=\"14.00\">_1</text>\n</g>\n<!-- node6&#45;&gt;node4 -->\n<g id=\"edge6\" class=\"edge\"><title>node6:_0&#45;&gt;node4</title>\n<path fill=\"none\" stroke=\"black\" d=\"M62,-44C62,-58.5526 69.6371,-71.3533 79.6757,-81.8932\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"77.2916,-84.4561 86.9448,-88.8226 82.1216,-79.3893 77.2916,-84.4561\"/>\n</g>\n<!-- node6&#45;&gt;node5 -->\n<g id=\"edge8\" class=\"edge\"><title>node6:_1&#45;&gt;node5</title>\n<path fill=\"none\" stroke=\"black\" d=\"M96,-44C96,-76.7112 51.6686,-58.7621 37,-88 24.7027,-112.511 29.9228,-143.544 37.4011,-167.04\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"34.1313,-168.295 40.6998,-176.608 40.749,-166.013 34.1313,-168.295\"/>\n</g>\n<!-- node14 -->\n<g id=\"node14\" class=\"node\"><title>node14</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"142,-8 142,-44 208,-44 208,-8 142,-8\"/>\n<text text-anchor=\"middle\" x=\"158.5\" y=\"-21.9\" font-family=\"Times Roman,serif\" font-size=\"14.00\">_0</text>\n<polyline fill=\"none\" stroke=\"black\" points=\"175,-8 175,-44 \"/>\n<text text-anchor=\"middle\" x=\"191.5\" y=\"-21.9\" font-family=\"Times Roman,serif\" font-size=\"14.00\">_1</text>\n</g>\n<!-- node14&#45;&gt;node4 -->\n<g id=\"edge12\" class=\"edge\"><title>node14:_1&#45;&gt;node4</title>\n<path fill=\"none\" stroke=\"black\" d=\"M192,-44C192,-58.5526 184.363,-71.3533 174.324,-81.8932\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"171.878,-79.3893 167.055,-88.8226 176.708,-84.4561 171.878,-79.3893\"/>\n</g>\n<!-- node7 -->\n<g id=\"node7\" class=\"node\"><title>node7</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"226,-89 226,-139 280,-139 280,-89 226,-89\"/>\n<text text-anchor=\"middle\" x=\"253\" y=\"-122.4\" font-family=\"Times Roman,serif\" font-size=\"14.00\">tree</text>\n<polyline fill=\"none\" stroke=\"black\" points=\"226,-114 280,-114 \"/>\n<text text-anchor=\"middle\" x=\"253\" y=\"-97.4\" font-family=\"Times Roman,serif\" font-size=\"14.00\">left</text>\n</g>\n<!-- node14&#45;&gt;node7 -->\n<g id=\"edge10\" class=\"edge\"><title>node14:_0&#45;&gt;node7</title>\n<path fill=\"none\" stroke=\"black\" d=\"M158,-44C158,-44.9602 190.609,-68.8229 217.617,-88.4224\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"215.626,-91.3021 225.777,-94.3381 219.735,-85.6348 215.626,-91.3021\"/>\n</g>\n<!-- node13 -->\n<g id=\"node13\" class=\"node\"><title>node13</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"490,-8 490,-44 544,-44 544,-8 490,-8\"/>\n<text text-anchor=\"middle\" x=\"517\" y=\"-21.9\" font-family=\"Times Roman,serif\" font-size=\"14.00\">()</text>\n</g>\n<!-- node3 -->\n<g id=\"node3\" class=\"node\"><title>node3</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"561.5,-1 561.5,-51 736.5,-51 736.5,-1 561.5,-1\"/>\n<text text-anchor=\"middle\" x=\"649\" y=\"-34.4\" font-family=\"Times Roman,serif\" font-size=\"14.00\">[k :: term, t :: term, /…</text>\n<polyline fill=\"none\" stroke=\"black\" points=\"561.5,-26 736.5,-26 \"/>\n<text text-anchor=\"middle\" x=\"649\" y=\"-9.4\" font-family=\"Times Roman,serif\" font-size=\"14.00\">continue</text>\n</g>\n<!-- node11 -->\n<g id=\"node11\" class=\"node\"><title>node11</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"754,-8 754,-44 808,-44 808,-8 754,-8\"/>\n<text text-anchor=\"middle\" x=\"781\" y=\"-21.9\" font-family=\"Times Roman,serif\" font-size=\"14.00\">()</text>\n</g>\n</g>\n</svg>\n","points":{"7":{"names":[["auto","t_TNode_left"],["user","left"]],"locations":[{"start":{"line":34,"col":69},"end":{"line":50,"col":5}},{"start":{"line":39,"col":3},"end":{"line":39,"col":26}}],"kind":"term","permissions":["tree","=t_TNode_left"]},"11":{"names":[["auto","/x_15"]],"locations":[{"start":{"line":44,"col":6},"end":{"line":44,"col":16}}],"kind":"term","permissions":["()","=/x_15"]},"3":{"names":[["user","continue"]],"locations":[{"start":{"line":34,"col":0},"end":{"line":83,"col":0}}],"kind":"term","permissions":["[k :: term, t :: term, /root5 :: term] (=/root5 | /root5 @ (=k, =t) ∗ k @ continuation ∗ t @ tree) ->\ntree","=continue"]},"13":{"names":[["auto","/x_17"]],"locations":[{"start":{"line":46,"col":6},"end":{"line":46,"col":22}}],"kind":"term","permissions":["()","=/x_17"]},"5":{"names":[["user","k"]],"locations":[{"start":{"line":34,"col":36},"end":{"line":34,"col":60}}],"kind":"term","permissions":["continuation","=k"]},"14":{"names":[["auto","/x_18"]],"locations":[{"start":{"line":49,"col":16},"end":{"line":49,"col":26}}],"kind":"term","permissions":["(=t_TNode_left, =t)","=/x_18"]},"6":{"names":[["auto","/root2"]],"locations":[{"start":{"line":34,"col":17},"end":{"line":34,"col":61}}],"kind":"term","permissions":["(=t, =k)","=/root2"]},"2":{"names":[["user","traverse"]],"locations":[{"start":{"line":34,"col":0},"end":{"line":83,"col":0}}],"kind":"term","permissions":["[t :: term, k :: term, /root2 :: term] (=/root2 | /root2 @ (=t, =k) ∗ t @ tree ∗ k @ continuation) ->\ntree","=traverse"]},"12":{"names":[["auto","/x_16"]],"locations":[{"start":{"line":45,"col":6},"end":{"line":45,"col":19}}],"kind":"term","permissions":["()","=/x_16"]},"4":{"names":[["user","t"]],"locations":[{"start":{"line":34,"col":18},"end":{"line":34,"col":34}}],"kind":"term","permissions":["KLeft {\n    father: =k;\n    right: =t_TNode_right\n  }","=t"]},"8":{"names":[["auto","t_TNode_right"],["user","right"]],"locations":[{"start":{"line":34,"col":69},"end":{"line":50,"col":5}},{"start":{"line":39,"col":3},"end":{"line":39,"col":26}}],"kind":"term","permissions":["tree","=t_TNode_right"]}}}