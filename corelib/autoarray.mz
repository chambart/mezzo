(* ------------------------------------------------------------------------ *)

(* The type of arrays is axiomatized. *)

(* Arrays can be either mutable or immutable. *)
abstract mut : type
fact exclusive mut

abstract immut : type
fact duplicable immut

(* Arrays are mutable if the first type parameter is exclusive, immutable
 * otherwise. *)
abstract array m +a : type
fact duplicable m => duplicable a => duplicable (array m a)
fact exclusive m => exclusive (array m a)

(* Aliases for immutable and mutable arrays. *)
alias iarray a = array immut a
alias marray a = array mut a 

(* A Mezzo array is implemented as an OCaml array. Because Mezzo arrays
   are exclusive, they include an adopter field. We use the first slot
   of the array for this purpose, so a Mezzo array of length [n] is
   represented as an OCaml array of length [n+1]. *)

(* ------------------------------------------------------------------------ *)

(* This type (which is isomorphic to [bool]) is used to indicate the
   direction of iterations over arrays. *)

data sense =
  | Down
  | Up

