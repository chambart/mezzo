(* Arithmetic *)

abstract int
fact duplicable int

val ( * ) @ (int, int) -> int
val ( - ) @ (int, int) -> int
val ( / ) @ (int, int) -> int
val ( + ) @ (int, int) -> int

(* The physical equality check (==) defined below returns, in case of success, a
 * permission revealing that the two identifiers are equal. The condition of an
 * if-then-else expression just has to be a data type with two branches. The
 * first branch means true, and the second branch means false. *)

data phys_equal (x :: TERM) (y :: TERM) =
  | Equals { | x = y }
  | NotEquals

val ( == ) @ [a, b] (x: a, y: b) -> phys_equal x y

data bool = True | False

val ( = ) @ [a, b] (a, b) -> bool
val ( < ) @ (int, int) -> bool
