abstract int

data list a = Nil | Cons { head: a; tail: list a }

exclusive data ref a = Ref { contents: a }

(* If we remove the consumes annotation, this is not contravariant anymore,
 * because this desugars as [x::term] (=x | x@a) -> (int | x@a) an a now appears
 * on both sides of the arrow. *)
data contra a = C { c: (consumes a) -> int }

data bi a = A

data inv a = A { a: a -> a }

data test a b c = A { a: a } | B { b: b }
