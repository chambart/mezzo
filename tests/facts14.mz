(* Facts for algebraic data types where [mutable] is used per-branch. *)

val d [a] duplicable a => () : () =
  ()

val x [a] exclusive a => () : () =
  ()

data mlist a =
  | MNil
  | mutable MCons { head: a; tail: mlist a }

(* These should succeed. *)

val () =
  d [MNil] ()

val () =
  x [MCons { head: int; tail: mlist int }] ()

