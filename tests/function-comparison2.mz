(* This is just to show how bad our function comparison code is... it doesn't
 * even undo unifications! *)

val f (x: int, y: int, g: int -> (int)): int =
  fail

val v =
  let x = 1 and y = 2 in
  (* Alright, this is slightly convoluted, but the point is the [x = y] equation
   * should not creep into the caller's scope! *)
  let g2 (u: int): (int | x = y) = fail in
  let z = f (x, y, g2) in
  assert (x = y);
  z
