mutable data xlist a = XCons { head: a; tail: xlist a } | XNil
mutable data listmaster a = Listmaster adopts xlist a

data bool = True | False

val f [a] (elt: a): listmaster a =
  let x = Listmaster in
  let (y: listmaster a) =
    if True then begin
      give (XCons { head = elt; tail = XNil }: XCons { head = elt; tail: XNil }) to x;
      x
    end else begin
      give (XNil: XNil) to x;
      x
    end
  in
  y
